<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clrnamespace:System;assembly=mscorlib"
                    xmlns:mwt="clrnamespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- a controls default colors -->
    <SolidColorBrush x:Key="foregroundBrush" Color="White"/>
    <SolidColorBrush x:Key="backgroundBrush" Color="DimGray"/>
    <!-- validation error default colors -->
    <SolidColorBrush x:Key="validationErrorForegroundBrush" Color="white"/>
    <SolidColorBrush x:Key="validationErrorBackgroundBrush" Color="Red"/>
    <!-- an active/inactive and enabled Controls colors -->
    <SolidColorBrush x:Key="activeForegroundBrush" Color="Orange"/>
    <SolidColorBrush x:Key="activeSelectedForegroundBrush" Color="Red"/>
    <SolidColorBrush x:Key="activeBackgroundBrush" Color="DimGray"/>
    <SolidColorBrush x:Key="inactiveForegroundBrush" Color="LightGray"/>
    <!-- a selectable controls color in selected state -->
    <SolidColorBrush x:Key="selectedForegroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="selectedBackgroundBrush" Color="Orange"/>
    <!-- a selectable controls color in unselected state -->
    <SolidColorBrush x:Key="unselectedForegroundBrush" Color="Orange"/>
    <SolidColorBrush x:Key="unselectedBackgroundBrush" Color="DimGray"/>
    <!-- inverted Orange for textbox background/cursor color -->
    <SolidColorBrush x:Key="invertedForegroundBrush" Color="#FF005AFF"/>
    <SolidColorBrush x:Key="disabledBrush" Color="DarkGray"/>
    <!--<SolidColorBrush x:Key="selectedForegroundBrush" Color="Red"/>-->
    <SolidColorBrush x:Key="dialogBackgroundBrush" Opacity="0.5" Color="Black"/>
    <SolidColorBrush x:Key="dialogContentBackgroundBrush" Opacity="0.8" Color="Black"/>
    
    <!--
    DEFAULT STYLES
    sorted alphabetically by target type name
    -->
    
    <Style x:Key="borderStyle" TargetType="{x:Type Border}"> <!--BasedOn="{StaticResource {x:Type Border}}">-->
        <Setter
            Property="BorderBrush"
            Value="{StaticResource foregroundBrush}"/>
    </Style>

    <!-- 
    Any label is underlined by a border, painted with foregound brush very narrowly and 
    having a 5 px margin from the undelined item
    -->
    <Style x:Key="labelBorderStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource borderStyle}">
        <Setter
            Property="BorderThickness"
            Value="0,0,0,0.5"/>
        <Setter
            Property="Margin"
            Value="0,0,0,5"/>
    </Style>

    <!-- 
    Any button has the same generaly foregound color.
    -->
    <Style x:Key="buttonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
    </Style>
    
    <!--
    A Text Buttons template centers a label with the foreground brush an having a rectengular border.
    The border has no background and is one pixel wide.
    The padding is a bit wider as the pading of symbl buttons because of esthetical reasons
    -->
    <Style x:Key="textButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource buttonStyle}">
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
        <Setter Property="Padding"
            Value="6,2,6,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                    <Border
                        Name="focusButtonBorder"
                        Background="Transparent"
                        BorderThickness="1"
                        Padding="1"
                        BorderBrush="{StaticResource foregroundBrush}"
                        Visibility="Hidden"/>
                        <Border
                            Name="buttonBorder"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"
                            Background="Transparent"/>
                    <!--<mwt:ButtonChrome 
                        BorderBrush="{TemplateBinding Border.BorderBrush}" 
                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}" 
                        RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" 
                        RenderPressed="{TemplateBinding ButtonBase.IsPressed}" 
                        Name="Chrome" 
                        SnapsToDevicePixels="True">-->
                        <ContentPresenter 
                            RecognizesAccessKey="True" 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                            Value="True">
                            <Setter TargetName="focusButtonBorder" Property="Visibility"
                                Value="Visible"/>
                            <Setter Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="Button.IsDefaulted"
                            Value="True">
                            <Setter TargetName="buttonBorder" Property="Background"
                                Value="{StaticResource selectedBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled" 
                                 Value="False">
                            <Setter Property="Foreground"
                                Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    A symbol buttons template centers a Path element. 
    The paths data is taken from buttons Content property. The symbol button can't contain ay other content
    -->
    <Style x:Key="symbolButtonStyle" BasedOn="{StaticResource buttonStyle}" TargetType="Button">
        <Setter Property="Width"
                Value="15"/>
        <Setter Property="Height"
                Value="15"/>
        <Setter Property="Padding"
            Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}">
                        <Border
                            Name="focusButtonBorder"
                            Background="Transparent"
                            BorderThickness="1"
                            Padding="1"
                            BorderBrush="{StaticResource foregroundBrush}"
                            SnapsToDevicePixels="True"
                            Visibility="Hidden"/>
                        <Border
                            Name="buttonBorder"
                            Margin="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <Path
                                Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="False"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="1.5"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsKeyboardFocused"
                            Value="True">
                            <Setter 
                                TargetName="focusButtonBorder" 
                                Property="Visibility"
                                Value="Visible"/>
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="Button.IsDefaulted" 
                                 Value="True">
                            <Setter TargetName="buttonBorder" Property="Background"
                                Value="{StaticResource selectedBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addSymbolButtonStyle" BasedOn="{StaticResource symbolButtonStyle}" TargetType="Button">
        <!--<Setter Property="Padding"
                Value="1,1,2,2"/>-->
        <Setter Property="Content"
                Value="M 1,4.5 L 9,4.5 M 4.5,1 L 4.5,9"/>
    </Style>

    <Style x:Key="removeSymbolButtonStyle"
           BasedOn="{StaticResource symbolButtonStyle}"
           TargetType="Button">
        <!--<Setter Property="Padding"
                Value="1,1,2,2"/>-->
        <Setter Property="Content"
                Value="M 1,3.5 L 9,3.5"/>
    </Style>

    <Style x:Key="checkBoxStyle"
           BasedOn="{StaticResource {x:Type CheckBox}}"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
            Value="{StaticResource activeForegroundBrush}"/>
        <Setter Property="Background"
            Value="{StaticResource activeBackgroundBrush}"/>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clrnamespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clrnamespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
                    <BulletDecorator 
                        Background="Transparent" 
                        SnapsToDevicePixels="True">
                        <BulletDecorator.Bullet>
                            <!--<mwt:BulletChrome 
                                Background="{TemplateBinding Panel.Background}" 
                                BorderBrush="{TemplateBinding Border.BorderBrush}" 
                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" 
                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}" 
                                IsChecked="{TemplateBinding ToggleButton.IsChecked}" />-->
                            <Border x:Name="Border"  
                                Width="13" 
                                Height="13" 
                                CornerRadius="0" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                BorderBrush="{TemplateBinding Foreground}">
                                <Path 
                                    Width="7" Height="7" 
                                    x:Name="CheckMark"
                                    SnapsToDevicePixels="False" 
                                    Stroke="{TemplateBinding Foreground}"
                                    StrokeThickness="2"
                                    Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter 
                            RecognizesAccessKey="True" 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                            Margin="{TemplateBinding Control.Padding}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsChecked" 
                            Value="false">
                            <Setter 
                                TargetName="CheckMark" 
                                Property="Visibility" 
                                Value="Collapsed"/>
                        </Trigger>
                        <Trigger 
                            Property="IsChecked" 
                            Value="{x:Null}">
                            <Setter 
                                TargetName="CheckMark" 
                                Property="Data" 
                                Value="M 0 7 L 7 0" />
                        </Trigger>
                        <!--<Trigger 
                            Property="IsMouseOver" 
                            Value="true">
                            <Setter 
                                TargetName="Border" 
                                Property="Background" 
                                Value="{StaticResource backgroundBrush}" />
                        </Trigger>-->
                        <Trigger 
                            Property="ContentControl.HasContent"
                            Value="True">
                            <Setter 
                                Property="FrameworkElement.FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="IFrameworkInputElement">
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle 
                                                        Stroke="{StaticResource activeBackgroundBrush}" 
                                                        StrokeThickness="1" 
                                                        StrokeDashArray="1 2" 
                                                        Margin="14,0,0,0" 
                                                        SnapsToDevicePixels="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter 
                                Property="Control.Padding">
                                <Setter.Value>
                                    <Thickness>4,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!--<Trigger 
                            Property="IsPressed" 
                            Value="true">
                            <Setter 
                                TargetName="Border" 
                                Property="Background" 
                                Value="{StaticResource PressedBrush}" />
                            <Setter 
                                TargetName="Border" 
                                Property="BorderBrush" 
                                Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>-->
                        <Trigger 
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter 
                                Property="TextElement.Foreground"
                                Value="{StaticResource disabledBrush}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
            
    </Style>

    <Style x:Key="labelStyle"
        BasedOn="{StaticResource {x:Type Label}}" 
        TargetType="{x:Type Label}">
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
    </Style>

    <Style x:Key="menuStyle"
           BasedOn="{StaticResource {x:Type Menu}}"
           TargetType="{x:Type Menu}">
        <Setter Property="BorderThickness"
            Value="0"/>
        <Setter Property="Panel.Background"
            Value="{StaticResource activeBackgroundBrush}"/>
        <Setter Property="Foreground"
            Value="{StaticResource activeForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type Menu}">
                    <Border 
                        BorderThickness="{TemplateBinding Border.BorderThickness}" 
                        Padding="{TemplateBinding Control.Padding}" 
                        BorderBrush="{TemplateBinding Border.BorderBrush}" 
                        Background="{TemplateBinding Panel.Background}" 
                        SnapsToDevicePixels="True">
                        <ItemsPresenter 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="menuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Panel.Background"
                Value="{StaticResource backgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource activeForegroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource foregroundBrush}"/>
        <Setter Property="Margin"
                Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type MenuItem}">
                    <Border Name="Border">
                        <Grid>
                            <ContentPresenter
                                Margin="{TemplateBinding Margin}"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                            <Popup Name="Popup"
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade">
                                <Border Name="SubmenuBorder"
                                  SnapsToDevicePixels="True"
                                  Background="{TemplateBinding Panel.Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="1" >
                                  <StackPanel  
                                    IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" 
                                 Value="true">
                            <Setter Property="Background" 
                                    Value="{StaticResource selectedBackgroundBrush}" 
                                    TargetName="Border"/>
                            <Setter Property="TextElement.Foreground" 
                                    Value="{StaticResource selectedForegroundBrush}" 
                                    TargetName="Border"/>
                            <Setter Property="BorderBrush" 
                                    Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" 
                                 Value="false">
                            <Setter Property="Background" 
                                    Value="{StaticResource activeBackgroundBrush}" 
                                    TargetName="Border"/>
                            <Setter Property="BorderBrush" 
                                    Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>
                        <Trigger 
                            Property="IsEnabled" 
                            Value="False">
                            <Setter Property="TextElement.Foreground" 
                                Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="unselectableListBoxItemStyle" 
           BasedOn="{StaticResource {x:Type ListBoxItem}}" 
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
            Value="Transparent"/>
        <!-- Foreground is inheriteded
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>-->
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
        <Setter Property="BorderThickness"
            Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <!-- This is just the same template as the default template -->
                    <Border 
                        BorderThickness="{TemplateBinding Border.BorderThickness}" 
                        Padding="{TemplateBinding Control.Padding}" 
                        BorderBrush="{TemplateBinding Border.BorderBrush}" 
                        Background="{TemplateBinding Panel.Background}" 
                        Name="Bd" 
                        SnapsToDevicePixels="True">
                        <ContentPresenter 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 
                        The template doesn't handle the selected state and 
                        uses a different brush in disabled state
                        -->
                        <Trigger 
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter 
                                Property="TextElement.Foreground"
                                Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="selectableListBoxItemStyle" 
           BasedOn="{StaticResource {x:Type ListBoxItem}}" 
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="BorderThickness"
            Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <!-- This is just the same template as the default template -->
                    <Border 
                        BorderThickness="{TemplateBinding Border.BorderThickness}" 
                        Padding="{TemplateBinding Control.Padding}" 
                        BorderBrush="{TemplateBinding Border.BorderBrush}" 
                        Background="{TemplateBinding Background}" 
                        Name="Border" 
                        SnapsToDevicePixels="True">
                        <ContentPresenter 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" 
                            Value="true">
                            <Setter 
                                Property="Background"
                                Value="{StaticResource selectedBackgroundBrush}"/>
                            <Setter 
                                Property="Foreground"
                                Value="{StaticResource selectedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter 
                                Property="TextElement.Foreground"
                                Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver"
                                    Value="True"/>
                                <Condition Property="IsSelected"
                                    Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="listBoxStyle"
        BasedOn="{StaticResource {x:Type ListBox}}"
        TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="ListBox">
                    <ScrollViewer 
                        Padding="{TemplateBinding Control.Padding}" 
                        Focusable="False">
                        <ItemsPresenter 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="ItemsControl.IsGrouping"
                            Value="True">
                            <Setter 
                                Property="ScrollViewer.CanContentScroll"
                                Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" 
            Value="Stretch" />
    </Style>

    <Style x:Key="textBlockStyle" 
        BasedOn="{StaticResource {x:Type TextBlock}}" 
        TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
    </Style>

    <Style x:Key="textBoxStyle" 
        BasedOn="{StaticResource {x:Type TextBox}}" 
        TargetType="{x:Type TextBox}">
        <Setter
            Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <!--background set to black to create an (inverted) Caret color-->
        <Setter Property="Background"
            Value="{StaticResource invertedForegroundBrush}"/>
        <Setter Property="FontFamily"
                Value="Segoe UI"/>
        <Setter Property="BorderThickness"
            Value="0,0,0,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type TextBoxBase}">
                    <!--RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" 
                        RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"-->
                    <!-- background of border is set explicitely here. The Template value id taken for inverted Caret color -->
                    <Border
                        Background="Transparent" 
                        BorderBrush="{TemplateBinding Foreground}" 
                        BorderThickness="{TemplateBinding Border.BorderThickness}" 
                        Name="Bd" 
                        SnapsToDevicePixels="True">
                        <ScrollViewer 
                            Name="PART_ContentHost" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="UIElement.IsKeyboardFocusWithin"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>
                        <Trigger 
                            Property="UIElement.IsEnabled"
                            Value="False">
                            <Setter 
                                Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>  
                        <Border 
                            BorderBrush="{StaticResource validationErrorBackgroundBrush}" 
                            BorderThickness="1">
                            <AdornedElementPlaceholder Name="MyAdorner" />
                        </Border>
                        <Border
                            Background="{StaticResource validationErrorBackgroundBrush}">
                             <TextBlock
                                Foreground="{StaticResource validationErrorForegroundBrush}"                            
                                Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="toolTipStyle"
            BasedOn="{StaticResource {x:Type ToolTip}}"
            TargetType="ToolTip">
        <Setter Property="HasDropShadow"
            Value="True" />
        <Setter Property="Background"
            Value="{StaticResource dialogContentBackgroundBrush}"/>
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0.5"
                        BorderBrush="{TemplateBinding Foreground}"
                        CornerRadius="1"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}">
                        <ContentPresenter 
                            Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="HasDropShadow"
                            Value="true">
                            <Setter 
                                TargetName="Border"
                                Property="SnapsToDevicePixels"
                                Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="scrollBarLineButtonStyle" 
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" 
            Value="True"/>
        <Setter Property="Focusable" 
            Value="false"/>
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding Foreground}"
                        BorderThickness="1">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="{TemplateBinding Foreground}"
                            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" 
                            Value="true">
                            <Setter 
                                TargetName="Border" 
                                Property="Background"
                                Value="{StaticResource foregroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                            Value="false">
                            <Setter 
                                Property="Foreground"
                                Value="{StaticResource disabledBrush}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                            Value="True">
                                <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                            </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="scrollBarPageButtonStyle" 
           TargetType="{x:Type RepeatButton}">
        <Setter 
            Property="SnapsToDevicePixels" 
            Value="True"/>
        <Setter 
            Property="IsTabStop" 
            Value="false"/>
        <Setter 
            Property="Focusable" 
            Value="false"/>
        <Setter 
            Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type RepeatButton}">
                    <Border 
                        Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="scrollBarThumbStyle" 
           TargetType="{x:Type Thumb}">
        <Setter 
            Property="SnapsToDevicePixels" 
            Value="True"/>
        <Setter 
            Property="IsTabStop" 
            Value="false"/>
        <Setter 
            Property="Focusable" 
            Value="false"/>
        <Setter
            Property="Background"
            Value="Transparent"/>
        <Setter
            Property="Foreground"
            Value="{StaticResource foregroundBrush}"/>
        <Setter 
            Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding Foreground}"
                        BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{StaticResource activeForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="scrollBarStyle" 
           BasedOn="{StaticResource {x:Type ScrollBar}}"
           TargetType="{x:Type ScrollBar}">
        <Setter 
            Property="SnapsToDevicePixels" Value="True"/>        
        <Style.Triggers>
            <Trigger 
                Property="Orientation" 
                Value="Horizontal">
                <Setter 
                    Property="Width" 
                    Value="Auto"/>
                <Setter 
                    Property="Height" 
                    Value="13" />
                <Setter
                    Property="Background"
                    Value="Transparent"/>
                <Setter
                    Property="Foreground"
                    Value="{StaticResource foregroundBrush}"/>
                <Setter 
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type ScrollBar}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="13"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="13"/>
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.ColumnSpan="3"
                                    Background="{TemplateBinding Background}"/>
                                <RepeatButton
                                    Grid.Column="0"
                                    Style="{StaticResource scrollBarLineButtonStyle}"
                                    Height="13"
                                    Width="13"
                                    Command="ScrollBar.LineLeftCommand"
                                    Content="M 4 0 L 4 8 L 0 4 Z" />
                                <Track
                                    Name="PART_Track"
                                    Grid.Column="1"
                                    IsDirectionReversed="False">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                            Style="{StaticResource scrollBarPageButtonStyle}"
                                            Command="ScrollBar.PageLeftCommand" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb
                                            Style="{StaticResource scrollBarThumbStyle}"
                                            Margin="0,1,0,1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding Foreground}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
                                            Style="{StaticResource scrollBarPageButtonStyle}"
                                            Command="ScrollBar.PageRightCommand" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                <RepeatButton
                                    Grid.Column="3"
                                    Style="{StaticResource scrollBarLineButtonStyle}"
                                    Width="13"
                                    Height="13"
                                    Command="ScrollBar.LineRightCommand"
                                    Content="M 0 0 L 4 4 L 0 8 Z"/>
                            </Grid>
                        </ControlTemplate>   
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger 
                Property="Orientation" 
                Value="Vertical">
                <Setter 
                    Property="Width" 
                    Value="13"/>
                <Setter 
                    Property="Height" 
                    Value="Auto" />
                <Setter 
                    Property="Template">
                    <Setter.Value>
                        <ControlTemplate
                            TargetType="{x:Type ScrollBar}">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="13"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="13"/>
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.RowSpan="3"
                                    Background="Transparent"/>
                                <RepeatButton
                                    Grid.Row="0"
                                    Style="{StaticResource scrollBarLineButtonStyle}"
                                    Height="13"
                                    Width="13"
                                    Command="ScrollBar.LineUpCommand"
                                    Content="M 0 4 L 8 4 L 4 0 Z" />
                                <Track
                                    Name="PART_Track"
                                    Grid.Row="1"
                                    IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                            Style="{StaticResource scrollBarPageButtonStyle}"
                                            Command="ScrollBar.PageUpCommand" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb
                                                Style="{StaticResource scrollBarThumbStyle}"
                                                Margin="1,0,1,0"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding Foreground}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton
                                                Style="{StaticResource scrollBarPageButtonStyle}"
                                                Command="ScrollBar.PageDownCommand" />
                                        </Track.IncreaseRepeatButton>
                                        </Track>
                                            <RepeatButton
                                                Grid.Row="3"
                                                Style="{StaticResource scrollBarLineButtonStyle}"
                                                Height="13"
                                                Width="13"
                                                Command="ScrollBar.LineDownCommand"
                                                Content="M 0 0 L 4 4 L 8 0 Z"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="scrollViewerStyle"
           BasedOn="{StaticResource {x:Type ScrollViewer}}"
           TargetType="{x:Type ScrollViewer}">
        <Setter
            Property="Background"
            Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                    TargetType="{x:Type ScrollViewer}">
                    <Grid
                        Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/> 
                            <ColumnDefinition
                                Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition 
                                Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter 
                            Grid.Column="0"
                            Grid.Row="0"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Grid.Row="0"
                            Style="{StaticResource scrollBarStyle}"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Style="{StaticResource scrollBarStyle}"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
           
</ResourceDictionary>